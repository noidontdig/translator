Java to C++ Translator, v. 2.3.1, (C) 2012 qimpp
Processing TestNestedForLoops.java ...
CompilationUnit(
  PackageDeclaration(
    null,
    QualifiedIdentifier(
      "qimpp",
      "tests"
    )
  ),
  ClassDeclaration(
    Modifiers(
      Modifier(
        "public"
      )
    ),
    "TestNestedForLoops",
    null,
    null,
    null,
    ClassBody(
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          )
        ),
        null,
        VoidType(),
        "main",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "args",
            null
          )
        ),
        null,
        null,
        Block(
          ForStatement(
            BasicForControl(
              Modifiers(),
              Type(
                PrimitiveType(
                  "int"
                ),
                null
              ),
              Declarators(
                Declarator(
                  "i",
                  null,
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              RelationalExpression(
                PrimaryIdentifier(
                  "i"
                ),
                "<",
                IntegerLiteral(
                  "5"
                )
              ),
              ExpressionList(
                PostfixExpression(
                  PrimaryIdentifier(
                    "i"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "j",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "j"
                    ),
                    "<",
                    IntegerLiteral(
                      "5"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "j"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    CallExpression(
                      SelectionExpression(
                        PrimaryIdentifier(
                          "System"
                        ),
                        "out"
                      ),
                      null,
                      "print",
                      Arguments(
                        AdditiveExpression(
                          AdditiveExpression(
                            PrimaryIdentifier(
                              "i"
                            ),
                            "+",
                            StringLiteral(
                              "\", \""
                            )
                          ),
                          "+",
                          PrimaryIdentifier(
                            "j"
                          )
                        )
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "print",
                  Arguments(
                    StringLiteral(
                      "\"\\n\""
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
