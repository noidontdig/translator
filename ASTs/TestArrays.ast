Java to C++ Translator, v. 2.3.1, (C) 2012 qimpp
Processing TestArrays.java ...
CompilationUnit(
  PackageDeclaration(
    null,
    QualifiedIdentifier(
      "qimpp",
      "tests"
    )
  ),
  ClassDeclaration(
    Modifiers(
      Modifier(
        "public"
      )
    ),
    "TestArrays",
    null,
    null,
    null,
    ClassBody(
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          )
        ),
        null,
        VoidType(),
        "main",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "args",
            null
          )
        ),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "char"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "foo",
                null,
                NewArrayExpression(
                  PrimitiveType(
                    "char"
                  ),
                  ConcreteDimensions(
                    IntegerLiteral(
                      "3"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SubscriptExpression(
                PrimaryIdentifier(
                  "foo"
                ),
                IntegerLiteral(
                  "0"
                )
              ),
              "=",
              CharacterLiteral(
                "\'h\'"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SubscriptExpression(
                PrimaryIdentifier(
                  "foo"
                ),
                IntegerLiteral(
                  "1"
                )
              ),
              "=",
              CharacterLiteral(
                "\'e\'"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SubscriptExpression(
                PrimaryIdentifier(
                  "foo"
                ),
                IntegerLiteral(
                  "2"
                )
              ),
              "=",
              CharacterLiteral(
                "\'y\'"
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                AdditiveExpression(
                  AdditiveExpression(
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "foo"
                      ),
                      IntegerLiteral(
                        "0"
                      )
                    ),
                    "+",
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "foo"
                      ),
                      IntegerLiteral(
                        "1"
                      )
                    )
                  ),
                  "+",
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "foo"
                    ),
                    IntegerLiteral(
                      "2"
                    )
                  )
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "bar",
                null,
                ArrayInitializer(
                  StringLiteral(
                    "\"hello \""
                  ),
                  StringLiteral(
                    "\"world\""
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                AdditiveExpression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "bar"
                    ),
                    IntegerLiteral(
                      "0"
                    )
                  ),
                  "+",
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "bar"
                    ),
                    IntegerLiteral(
                      "1"
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
